<launch>

  <!-- INFORMATION -->
  <!-- static_transform_publisher args: x y z yaw pitch roll parent_frame_id child_frame_id -->
  <!-- static_transform_publisher args: x y z qx qy qz qw parent_frame_id child_frame_id -->

  <!-- set arguments -->
  <arg name="sensors_encoder_enable" value="false" />
  <arg name="sensors_gps_enable" value="true" />
  <arg name="sensors_imu_enable" value="true" />
  <arg name="sensors_proximity_enable" value="true" />

  <!-- load sensor parameters to parameter server -->
  <rosparam command="load" file="$(find avc_sensors)/config/sensors.yaml" ns="sensor" />

  <!-- launch avc_sensors publisher nodes and broadcast transforms -->

  <!-- if encoders are enabled, launch encoder publisher nodes and broadcast transforms -->
  <group if="$(arg sensors_encoder_enable)">
    <node name="fl_encoder_node" pkg="avc_sensors" type="encoder_node" ns="sensor" args="f l" output="screen" />
    <!-- <node name="imu_link_broadcaster" pkg="tf2_ros" type="static_transform_publisher" args="0 0 0 0 0 0 base_link imu_link" /> -->
    <node name="fr_encoder_node" pkg="avc_sensors" type="encoder_node" ns="sensor" args="f r" output="screen" />
    <!-- <node name="imu_link_broadcaster" pkg="tf2_ros" type="static_transform_publisher" args="0 0 0 0 0 0 base_link imu_link" /> -->
    <node name="rl_encoder_node" pkg="avc_sensors" type="encoder_node" ns="sensor" args="r l" output="screen" />
    <!-- <node name="imu_link_broadcaster" pkg="tf2_ros" type="static_transform_publisher" args="0 0 0 0 0 0 base_link imu_link" /> -->
    <node name="rr_encoder_node" pkg="avc_sensors" type="encoder_node" ns="sensor" args="r r" output="screen" />
    <!-- <node name="imu_link_broadcaster" pkg="tf2_ros" type="static_transform_publisher" args="0 0 0 0 0 0 base_link imu_link" /> -->
  </group>

  <!-- if GPS is enabled, launch GPS publisher node and broadcast transform -->
  <group if="$(arg sensors_gps_enable)">
    <!-- run nmea_navsat_driver with arguments _port and _baud specified -->
    <!-- equivelant of "rosrun nmea_navsat_driver nmea_serial_driver _port:=/dev/ttyUSB0 _baud:=115200" -->
    <node name="nmea_serial_driver" pkg="nmea_navsat_driver" type="nmea_serial_driver" ns="sensor" output="screen" args="_port:=/dev/serial0 _baud:=57600" />
    <!-- <node name="gps_link_broadcaster" pkg="tf2_ros" type="static_transform_publisher" args="0 0 0 0 0 0 base_link gps_link" /> -->
  </group>

  <!-- if IMU is enabled, launch IMU publisher node and broadcast transform -->
  <group if="$(arg sensors_imu_enable)">
    <node name="imu_node" pkg="avc_sensors" type="imu_node" ns="sensor" output="screen" />
    <!-- <node name="imu_link_broadcaster" pkg="tf2_ros" type="static_transform_publisher" args="0 0 0 0 0 0 base_link imu_link" /> -->
  </group>

  <!-- if proximity sensor is enabled, launch proximity sensor publisher node and broadcast transform -->
  <group if="$(arg sensors_proximity_enable)">
    <node name="proximity_sensor_front_node" pkg="avc_sensors" type="proximity_sensor_node" ns="sensor" output="screen">
      <remap from="/sensor/proximity" to="/sensor/proximity/front" />
    </node>
    <node name="proximity_sensor_left_node" pkg="avc_sensors" type="proximity_sensor_node" ns="sensor" output="screen">
      <remap from="/sensor/proximity" to="/sensor/proximity/left" />
    </node>
    <node name="proximity_sensor_right_node" pkg="avc_sensors" type="proximity_sensor_node" ns="sensor" output="screen">
      <remap from="/sensor/proximity" to="/sensor/proximity/right" />
    </node>
    <!-- <node name="proximity_sensor_link_broadcaster" pkg="tf2_ros" type="static_transform_publisher" args="0 0 0 0 0 0 base_link proximity_sensor_link" /> -->
  </group>

</launch>
